{"remainingRequest":"/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/vue-loader/lib/index.js??ref--1-1!/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/vuepress/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/anthony/PhpstormProjects/Fiches-Polonais/docs/README.md?vue&type=template&id=c6f5370e&","dependencies":[{"path":"/home/anthony/PhpstormProjects/Fiches-Polonais/docs/README.md","mtime":1606059995709},{"path":"/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/anthony/PhpstormProjects/Fiches-Polonais/node_modules/vuepress/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}